/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Dao.ConnBanco;
import Dao.DaoPesquisa_Produto;
import Funcionalidades.FormataçãoTabela;
import Funcionalidades.ModeloTabela;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Allef
 */
public class LocalizaPedido extends javax.swing.JFrame {

    /**
     * Creates new form LocalizaPedido
     */
    FormataçãoTabela cortabela = new FormataçãoTabela(); // objeto para colorir uma celula da tabela
    Dao.DaoPesquisa_Produto daopesquisa = new DaoPesquisa_Produto();
    ConnBanco connBanco = new ConnBanco();

    public LocalizaPedido() {

        initComponents();

        connBanco.getConection();
        preencherTabela("SELECT * FROM transportadora_pedido order by fk_Num_Pedido");
        setLocationRelativeTo(this);
        Color nomesCor = new Color(250,128,114);
        cortabela.setBackground(nomesCor);
    }
    public void ModeloTabela( ArrayList dados){
        
        String[] colunas = new String[]{"Numero Pedido", "Centro Dstribuição", "Data Entrada", "Data Saida", "Situação Pedido"};
        ModeloTabela modelo = new ModeloTabela(dados, colunas);
        tabelaPedido.setModel(modelo);
        
        tabelaPedido.getColumnModel().getColumn(0).setPreferredWidth(120);
        tabelaPedido.getColumnModel().getColumn(0).setResizable(true);
        tabelaPedido.getColumnModel().getColumn(1).setPreferredWidth(240);

        tabelaPedido.getColumnModel().getColumn(1).setResizable(true);
        tabelaPedido.getColumnModel().getColumn(2).setPreferredWidth(160);
        tabelaPedido.getColumnModel().getColumn(2).setResizable(true);
        tabelaPedido.getColumnModel().getColumn(3).setPreferredWidth(140);
        tabelaPedido.getColumnModel().getColumn(3).setResizable(true);
        tabelaPedido.getColumnModel().getColumn(4).setPreferredWidth(170);
        tabelaPedido.getColumnModel().getColumn(4).setResizable(false);
        
        tabelaPedido.getColumnModel().getColumn(4).setCellRenderer(cortabela);
        tabelaPedido.setAutoResizeMode(tabelaPedido.AUTO_RESIZE_OFF);
        tabelaPedido.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }
    public final void preencherTabela(String SQL) {
        int centrodis;
        String centrodist = null, sql;
        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{"Numero Pedido", "Centro Dstribuição", "Data Entrada Filial", "Data Saida Filial", "Situação Pedido"};
        connBanco.getConection();
        connBanco.executaSQL(SQL);
        DateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        // pegando o primeiro registro 

        try {
            
            if (!connBanco.rs.first()) {
                txtregistro.setForeground(Color.red);
                txtregistro.setText("Não ha Registros Para Serem Exibidos");

            } else {

                connBanco.rs.first();

                // pegando os valores e formatando para preecher a tabela  
                do {
                    centrodist = connBanco.rs.getString(("fk_Centro_Dist"));
                    sql = "SELECT nome_Fantasia from centro_dist where cnpj = ?";
                   centrodist = daopesquisa.chaveEstrangeiraString(sql, centrodist);

                    dados.add(new Object[]{connBanco.rs.getInt("fk_Num_Pedido"), centrodist, formatter.format(connBanco.rs.getDate("dataEntrada")),formatter.format(connBanco.rs.getDate("dataSaida")), connBanco.rs.getString("status_Pedido")});
                } while (connBanco.rs.next());
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        
//E na tabela eu set o renderer dela assim
        
        // colocando os devidos valores em suas colunas 
        ModeloTabela(dados);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCalendar1 = new com.toedter.calendar.JCalendar();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaPedido = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtcodigoPedido = new javax.swing.JTextField();
        btnPesquisar = new javax.swing.JButton();
        txtregistro = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabelaPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tabelaPedido);

        jLabel1.setText("Numero Peidido");

        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtregistro, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(47, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txtcodigoPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtcodigoPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtregistro, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(125, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed

        ResultSet rs1 = null;
        String NPedido = "",centrodist,sql;
        NPedido = txtcodigoPedido.getText();
        int npedido;
        int cidade;
        Long unidade;
        String cid = null, sql1, result;
        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{"Numero Pedido", "Centro Dstribuição", "Data Entrada", "Data Saida", "Situação Pedido"};
         DateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        try {
            String sql2 = "SELECT * FROM transportadora_pedido where fk_Num_Pedido = ? ";
            connBanco.conn = connBanco.getConection();
            connBanco.pstm = connBanco.conn.prepareStatement(sql2);

            connBanco.pstm.setInt(1, Integer.parseInt(NPedido));
            rs1 = connBanco.pstm.executeQuery();

            if (rs1.next()) {
                npedido = (rs1.getInt("fk_Num_Pedido"));
            }

        } catch (SQLException ex) {

        }
        try {
            if (!rs1.first()) {
                txtregistro.setForeground(Color.red);
                txtregistro.setText("Não ha Registros com esse Numero Para Serem Exibidos");

            } else {

                rs1.first();

                // pegando os valores e formatando para preecher a tabela  
                do {
                    centrodist = rs1.getString(("fk_Centro_Dist"));
                    sql = "SELECT nome_Fantasia from centro_dist where cnpj = ?";
                   centrodist = daopesquisa.chaveEstrangeiraString(sql, centrodist);
                   
                    dados.add(new Object[]{rs1.getInt("fk_Num_Pedido"), centrodist, formatter.format(rs1.getDate("dataEntrada")), formatter.format(rs1.getDate("dataSaida")), rs1.getString("status_Pedido")});
                } while (rs1.next());
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

       ModeloTabela(dados);

    }//GEN-LAST:event_btnPesquisarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LocalizaPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LocalizaPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LocalizaPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LocalizaPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LocalizaPedido().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPesquisar;
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaPedido;
    private javax.swing.JTextField txtcodigoPedido;
    private javax.swing.JLabel txtregistro;
    // End of variables declaration//GEN-END:variables
}
